#!/bin/bash
# Generate Xcode project using CMake

cd "$(dirname "$(which "$0")")"

PROJECTDIR=../../Build/macOS
PROJECTPATH=$PROJECTDIR/SimRobot.xcodeproj
PLIST="/usr/libexec/PlistBuddy -c"
TEMPPATH=/tmp/generate.tmp
TEMPPATH2=/tmp/generate2.tmp

# Create a symbolic link to cmake
if [ ! -e "./cmake" ]; then
  echo -n "Searching for CMake... "
  while read file; do
    if [ -f "$file/Contents/bin/cmake" ]; then
      ln -sf "$file/Contents/bin/cmake" cmake
    fi
  done <<<"$(/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/Support/lsregister -dump \
  | grep "^[ 	]*path:" \
  | grep "CMake" \
  | sed -e "s%[ 	]*path: *%%" -e "s% (.*%%")"

  # Could the link be created?
  if [ -e "./cmake" ]; then
    echo "Found."
  else
    echo "Not found."
    exit 1
  fi
fi

# Create project
./cmake -G Xcode -S ../Common -B $PROJECTDIR

# Assign folders to most source groups
grep  <$PROJECTPATH/project.pbxproj -v '/Make/Common/CMakeLists.txt' \
| tr '\n' '~' \
| sed 's%\(isa = PBXGroup;~[^)]*/\* \)\(/[^*]*\)\(/[^*]*\)\( \*/,[^<]*\)<group>";%\1\2\3\4<absolute>";~			path = "\2";%g'\
| tr '~' '\n' >$TEMPPATH2

# Remove some unwanted folders and files from project tree
( sed  <$TEMPPATH2 -n '/targets = (/q;p' \
  | grep -v "_autogen \*/,$"
  sed  <$TEMPPATH2 -n '/targets = (/,$p' ) \
  | grep -v "ALL_BUILD \*/,$" \
  | sed -e 's%\.framework \*/;%.framework */; settings = {ATTRIBUTES = (CodeSignOnCopy, RemoveHeadersOnCopy, ); };%' \
    -e 's%\.dylib \*/;%.dylib */; settings = {ATTRIBUTES = (CodeSignOnCopy, ); };%' \
    -e 's%make -C %make -sC %g' \
    -e 's%[[:<:]]HEADER_SEARCH_PATHS%USER_HEADER_SEARCH_PATHS%' >$TEMPPATH
rm $TEMPPATH2

# Sort folders Libs
for NUM in 1 2; do
  BEFORE=$(($(grep <$TEMPPATH -Fnm $NUM '/* Libs */ =' | tail -1 | sed 's%:.*%%') + 2))
  SIZE=$(($(tail <$TEMPPATH +$(($BEFORE + 1)) | grep -Fnm 1 ");" | sed 's%:.*%%') - 1))
  AFTER=$(($BEFORE + $SIZE + 1))
  (
    head <$TEMPPATH -$BEFORE
    tail <$TEMPPATH +$(($BEFORE + 1)) | head -$SIZE | sort -fk 2
    tail <$TEMPPATH +$AFTER
  ) >$TEMPPATH2 \
  && mv $TEMPPATH2 $TEMPPATH
done
mv $TEMPPATH $PROJECTPATH/project.pbxproj

# Create the three schemes from the ones CMake created. Patch in the target for
# profiling. Disable GPU validation to suppress some output.
# Deactivate some building targets.
SCHEMEDIR=$PROJECTPATH/xcshareddata/xcschemes
SCHEMETEMPLATE=$SCHEMEDIR/SimRobot.xcscheme
sed <$SCHEMETEMPLATE >$TEMPPATH2 's%debugDocumentVersioning *= *"YES"/>%debugDocumentVersioning = "YES">\
   </ProfileAction>%'
rm $SCHEMETEMPLATE
(
  sed <$TEMPPATH2 -n '/<\/ProfileAction>/q;p'
  sed <$TEMPPATH2 -n '/BuildableProductRunnable/,/\/BuildableProductRunnable/p;/\/BuildableProductRunnable/q'
  sed <$TEMPPATH2 -n '/<\/ProfileAction>/,$p'
) \
| sed >$TEMPPATH \
  -e 's%launchStyle *= *"0"%launchStyle = "0" enableGPUValidationMode = "1"%' \
  -e 's%buildConfiguration *= *".*"%buildConfiguration = "Debug"%'
rm $TEMPPATH2
mv $TEMPPATH $SCHEMEDIR/Debug.xcscheme
sed <$SCHEMEDIR/Debug.xcscheme >$TEMPPATH 's%buildConfiguration *= *"Debug"%buildConfiguration = "Develop"%'
mv $TEMPPATH $SCHEMEDIR/Develop.xcscheme
sed <$SCHEMEDIR/Debug.xcscheme >$TEMPPATH 's%buildConfiguration *= *"Debug"%buildConfiguration = "Release"%'
mv $TEMPPATH $SCHEMEDIR/Release.xcscheme

# Avoid automatically creating schemes for all targets
SETTINGSPATH=$PROJECTPATH/project.xcworkspace/xcshareddata/WorkspaceSettings.xcsettings
$PLIST "Set :IDEWorkspaceSharedSettings_AutocreateContextsIfNeeded false" $SETTINGSPATH 2>/dev/null \
|| $PLIST "Add :IDEWorkspaceSharedSettings_AutocreateContextsIfNeeded bool false" $SETTINGSPATH

# Force Xcode to use Build directory
SETTINGSDIR=$PROJECTPATH/project.xcworkspace/xcuserdata/$USER.xcuserdatad
SETTINGSPATH=$SETTINGSDIR/WorkspaceSettings.xcsettings
mkdir -p "$SETTINGSDIR"
$PLIST "Set :BuildLocationStyle CustomLocation" $SETTINGSPATH >/dev/null 2>>/dev/null || $PLIST "Add :BuildLocationStyle string CustomLocation" $SETTINGSPATH  >/dev/null
$PLIST "Set :CustomBuildIntermediatesPath ../../Build/macOS" $SETTINGSPATH 2>/dev/null || $PLIST "Add :CustomBuildIntermediatesPath string ../../Build/macOS" $SETTINGSPATH 
$PLIST "Set :CustomBuildLocationType RelativeToWorkspace" $SETTINGSPATH 2>/dev/null || $PLIST "Add :CustomBuildLocationType string RelativeToWorkspace" $SETTINGSPATH
$PLIST "Set :CustomBuildProductsPath ../../Build/macOS" $SETTINGSPATH 2>/dev/null || $PLIST "Add :CustomBuildProductsPath string ../../Build/macOS" $SETTINGSPATH
$PLIST "Set :DerivedDataLocationStyle Default" $SETTINGSPATH 2>/dev/null || $PLIST "Add :DerivedDataLocationStyle string Default" $SETTINGSPATH

# Disable App Nap for SimRobot
defaults write org.B-Human.SimRobot NSAppSleepDisabled -bool YES

# Create symbolic link to Xcode project
ln -sf $PROJECTPATH .
